version: '3.8'

services:
  web:
    build: .
    ports:
      - "8000:8000"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      - DEBUG=0
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/jobscraper
      - REDIS_URL=redis://redis:6379/0
      - ADZUNA_APP_ID=${ADZUNA_APP_ID}
      - ADZUNA_APP_KEY=${ADZUNA_APP_KEY}
      - SECRET_KEY=${SECRET_KEY}
      - ALLOWED_HOSTS=${ALLOWED_HOSTS}
    depends_on:
      - db
      - redis
    command: >
      sh -c "cd backend && python manage.py migrate &&
             python manage.py collectstatic --noinput &&
             python manage.py init_sources &&
             gunicorn config.wsgi:application --bind 0.0.0.0:8000 --workers 3"

  db:
    image: postgres:15
    environment:
      - POSTGRES_DB=jobscraper
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    restart: unless-stopped

  celery:
    build: .
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      - DEBUG=0
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/jobscraper
      - REDIS_URL=redis://redis:6379/0
      - ADZUNA_APP_ID=${ADZUNA_APP_ID}
      - ADZUNA_APP_KEY=${ADZUNA_APP_KEY}
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      - db
      - redis
    command: sh -c "cd backend && celery -A config worker --loglevel=info --concurrency=2"
    restart: unless-stopped

  celery-beat:
    build: .
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    environment:
      - DEBUG=0
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD}@db:5432/jobscraper
      - REDIS_URL=redis://redis:6379/0
      - ADZUNA_APP_ID=${ADZUNA_APP_ID}
      - ADZUNA_APP_KEY=${ADZUNA_APP_KEY}
      - SECRET_KEY=${SECRET_KEY}
    depends_on:
      - db
      - redis
    command: sh -c "cd backend && celery -A config beat --loglevel=info"
    restart: unless-stopped

  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - web
    restart: unless-stopped

volumes:
  postgres_data:
  static_volume:
  media_volume:
